name: CI
on:
  pull_request:
  workflow_dispatch:
jobs:
  build:
    name: Build [Node${{ matrix.node-version }}]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Project cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/*
          key: ${{ github.sha }}

  test:
    name: Test [Node${{ matrix.node-version }}]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - name: Project cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/*
          key: ${{ github.sha }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Test
        run: npm run test

  test-success:
    name: Test success
    runs-on: ubuntu-latest
    needs: [build, test]
    if: always()
    steps:
      - run: exit 1
        if: ${{ always() && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')) }}
